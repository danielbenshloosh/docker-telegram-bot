language: bash
services: docker

env:
  - VERSION=3.6 VARIANT=stretch
install:
  - git clone https://github.com/docker-library/official-images.git ~/official-images
before_script:
  - env | sort
  - FOLDER="./bot"
  - dockerfile_dir="python$VERSION/$VARIANT"
  - slash='/'; image="luckydonald${slash}telegram-bot:python${VERSION}-${VARIANT//$slash/-}"
  - docker --version
  - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  - exit 2;
script:
  - |
    (
      set -Eeuo pipefail
      set -x
      ls -lah .
      ls -lah $FOLDER
      ls -lah bot/entrypoint.sh
      ls -lah $FOLDER/entrypoint.sh
      travis_retry docker build --build-arg FOLDER="$FOLDER" -t "$image" -f $dockerfile_dir/Dockerfile .
      ~/official-images/test/run.sh --config ~/official-images/test/config.sh --config ./test_config.sh "$image"
      if [ "$TRAVIS_BRANCH" == "master" ]; then
          docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
          travis_retry docker push "$image"
      fi
      # onbuild
      onbuild_dir="$dockerfile_dir/onbuild"
      if [ -d $onbuild_dir ]; then
        onbuildFrom="$(awk 'toupper($1) == "FROM" { print $2; exit }' $onbuild_dir/Dockerfile)"
        docker tag "$image" "$onbuildFrom"
        docker build --build-arg FOLDER="$FOLDER" -t "$image-onbuild" -f $onbuild_dir/Dockerfile .
        ~/official-images/test/run.sh --config ~/official-images/test/config.sh --config ./test_config.sh "$image-onbuild"
        if [ "$TRAVIS_BRANCH" == "master" ]; then
          travis_retry docker push "$image-onbuild"
        fi # travis
      fi # onbuild
    )
after_script:
  - docker images
